<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css"
        integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid #ccc;
            min-height: 200px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row mt-4">
            <div class="col-md-8">
                <h4>
                    Chat
                </h4>
                <hr>
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" class="form-control" id="username" autocomplete=off placeholder="Enter Username">
                </div>
                <div class="form-group">
                    <label for="message">Message</label>
                    <input type="text" class="form-control" id="message" placeholder="Enter Message">

                </div>
                <input type="hidden" name="action" id="action">
                <button type="button" class="btn btn-primary my-2" id="send">Send Message </button>
                <div class='mt-2 float-end' id='status'>
                    hey
                </div>
                <br>
                <div id='outbox' class="chatbox">

                </div>
            </div>
            <div class="col-md-4">
                <h4>
                    Who's online
                </h4>
                <hr>
                <ul id='online_users'></ul>
            </div>
        </div>
    </div>

</body>
<script src="/static/reconnecting-websocket.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
    integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous">
</script>
<script>
    let socket = null;
       let statusDiv = document.getElementById('status');
        let outboxDiv = document.getElementById('outbox');
        let usernameField = document.getElementById('username');
        let messageField = document.getElementById('message');
    window.onbeforeunload = function () {
        let jsonData = {}
        jsonData['action'] = 'left';
        socket.send(JSON.stringify(jsonData));
        socket.close();
    }
    document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://localhost:8080/ws", null, {
            debug: true,
            reconnectInterval: 3000
        });
        const offline = `<span class="badge bg-danger">Offline</span>`;
        const online = `<span class="badge bg-success">Online</span>`
     



        socket.onopen = function () {
            statusDiv.innerHTML = online;
            showSuccess('Connected to server');

        };
        socket.onclose = function () {
            showError("disconnected");
            statusDiv.innerHTML = offline;
        };
        socket.onerror = function (error) {
            showError('an error was encorred ' + error);
        };
        socket.onmessage = function (message) {

            let data = JSON.parse(message.data);

            switch (data.action) {
                case 'list_users':
                    let ul = document.getElementById('online_users');
                    while (ul.firstChild) {
                        ul.removeChild(ul.firstChild);
                    }
                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (user) {
                            let li = document.createElement('li');
                            li.innerHTML = user;
                            ul.appendChild(li);
                        });
                    }
                    break;
                case 'message':
                    let outbox = document.getElementById('outbox');
                    let message = document.createElement('div');
                    message.innerHTML = data.message;
                    outbox.appendChild(message);
                    break;
            }

        }

        //get username

        usernameField.addEventListener('change', function (e) {
            let jsonData = {}
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        });

        messageField.addEventListener('keydown', function (e) {

            if (e.keyCode == 13) {

                if (!socket) {

                    return false;
                }
                if (messageField.value != '' && usernameField.value != '') {

                    event.preventDefault();
                    event.stopPropagation();
                    sendMessage();
                } else {
                    showError("Please enter username and message");
                }
            }
        });

        document.getElementById('send').addEventListener('click', function (e) {
            if (!socket) {

                return false;
            }
            if (messageField.value != '' && usernameField.value != '') {
                sendMessage();
            } else {
                showError("Please enter username and message");
            }

        });

    });



    function sendMessage() {
console.log('send message called')
        let jsonData = {}
        jsonData["action"] = "message";
        jsonData["username"] = usernameField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData));
        messageField.value = '';
    }

    function showError(msg) {
        notie.alert({
            type: 'error',
            text: msg,
            time: 2
        });
    }

    function showSuccess(msg) {
        notie.alert({
            type: 'success',
            text: msg,
            time: 2
        });
    }
</script>

</html>